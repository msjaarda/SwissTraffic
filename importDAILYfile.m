function rawdataraw = importDAILYfile(filename, startRow, endRow)
%IMPORTDAILYFILE Import numeric data from a text file as a matrix.
%   RAWDATARAW = IMPORTDAILYFILE(FILENAME) Reads data from text file FILENAME
%   for the default selection.
%
%   RAWDATARAW = IMPORTDAILYFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   rawdataraw = importfile6('40580101.V00', 22, 235);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2019/04/03 16:31:31

%% Initialize variables.
if nargin<=2
    startRow = 22;
    endRow = inf;
end

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%8s%8s%3s%2s%2s%5s%3s%3s%7s%3s%2s%5s%5s%4s%6s%3s%3s%6s%5s%5s%5s%5s%5s%5s%5s%5s%6s%6s%6s%6s%6s%6s%6s%6s%6s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Remove white space around all cell columns.
dataArray{3} = strtrim(dataArray{3});
dataArray{4} = strtrim(dataArray{4});
dataArray{5} = strtrim(dataArray{5});
dataArray{6} = strtrim(dataArray{6});
dataArray{7} = strtrim(dataArray{7});
dataArray{8} = strtrim(dataArray{8});

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Split data into numeric and string columns.
rawNumericColumns = raw(:, [1,2,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]);
rawStringColumns = string(raw(:, [3,4,5,6,7,8]));


%% Replace non-numeric cells with 0.0
R = cellfun(@(x) (~isnumeric(x) && ~islogical(x)) || isnan(x),rawNumericColumns); % Find non-numeric cells
rawNumericColumns(R) = {0.0}; % Replace non-numeric cells

%% Create output variable
rawdataraw = table;
rawdataraw.ZST = cell2mat(rawNumericColumns(:, 1));
rawdataraw.Head = cell2mat(rawNumericColumns(:, 2));
rawdataraw.DD = rawStringColumns(:, 1);
rawdataraw.MM = rawStringColumns(:, 2);
rawdataraw.YY = rawStringColumns(:, 3);
rawdataraw.HHMM = rawStringColumns(:, 4);
rawdataraw.SS = rawStringColumns(:, 5);
rawdataraw.HH = rawStringColumns(:, 6);
rawdataraw.RESCOD = cell2mat(rawNumericColumns(:, 3));
rawdataraw.FS = cell2mat(rawNumericColumns(:, 4));
rawdataraw.D = cell2mat(rawNumericColumns(:, 5));
rawdataraw.HEADx = cell2mat(rawNumericColumns(:, 6));
rawdataraw.GAP = cell2mat(rawNumericColumns(:, 7));
rawdataraw.SPEED = cell2mat(rawNumericColumns(:, 8));
rawdataraw.LENTH = cell2mat(rawNumericColumns(:, 9));
rawdataraw.AX = cell2mat(rawNumericColumns(:, 10));
rawdataraw.CS = cell2mat(rawNumericColumns(:, 11));
rawdataraw.WBTOT = cell2mat(rawNumericColumns(:, 12));
rawdataraw.W1_2 = cell2mat(rawNumericColumns(:, 13));
rawdataraw.W2_3 = cell2mat(rawNumericColumns(:, 14));
rawdataraw.W3_4 = cell2mat(rawNumericColumns(:, 15));
rawdataraw.W4_5 = cell2mat(rawNumericColumns(:, 16));
rawdataraw.W5_6 = cell2mat(rawNumericColumns(:, 17));
rawdataraw.W6_7 = cell2mat(rawNumericColumns(:, 18));
rawdataraw.W7_8 = cell2mat(rawNumericColumns(:, 19));
rawdataraw.W8_9 = cell2mat(rawNumericColumns(:, 20));
rawdataraw.GW_TOT = cell2mat(rawNumericColumns(:, 21));
rawdataraw.AWT01 = cell2mat(rawNumericColumns(:, 22));
rawdataraw.AWT02 = cell2mat(rawNumericColumns(:, 23));
rawdataraw.AWT03 = cell2mat(rawNumericColumns(:, 24));
rawdataraw.AWT04 = cell2mat(rawNumericColumns(:, 25));
rawdataraw.AWT05 = cell2mat(rawNumericColumns(:, 26));
rawdataraw.AWT06 = cell2mat(rawNumericColumns(:, 27));
rawdataraw.AWT07 = cell2mat(rawNumericColumns(:, 28));
rawdataraw.AWT08 = cell2mat(rawNumericColumns(:, 29));
rawdataraw.AWT09 = cell2mat(rawNumericColumns(:, 30));

